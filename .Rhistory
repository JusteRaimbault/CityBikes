histFit(cols,6,c(0,1),c(0,40),0.5,"Moran",c("red3","green","yellow"))
histFit(cols,7,c(1,2),c(0,20),1.5,"Speed",c("red3","green","yellow"))
histFit(cols,8,c(0,1),c(0,15),1.5,"Accessibility",c("red3","green","yellow"))
}
robManyConfs(c(1,3,7))
robManyConfs <- function(cols){
par(mfcol=c(2,2),bg="white")
histFit(cols,5,c(0,1),c(0,30),1.5,"Density",c("red3","green","yellow"))
histFit(cols,6,c(0,1),c(0,30),0.5,"Moran",c("red3","green","yellow"))
histFit(cols,7,c(1,2),c(0,30),1.5,"Speed",c("red3","green","yellow"))
histFit(cols,8,c(0,1),c(0,30),1.5,"Accessibility",c("red3","green","yellow"))
}
robManyConfs(c(1,3,7))
robManyConfs <- function(cols){
par(mfcol=c(2,2),bg="white")
histFit(cols,5,c(0,1),c(0,35),1.5,"Density",c("red3","green","yellow"))
histFit(cols,6,c(0,1),c(0,30),0.5,"Moran",c("red3","green","yellow"))
histFit(cols,7,c(1,3),c(0,35),1.5,"Speed",c("red3","green","yellow"))
histFit(cols,8,c(0,1),c(0,30),1.5,"Accessibility",c("red3","green","yellow"))
}
robManyConfs(c(1,3,7))
robManyConfs <- function(cols){
par(mfcol=c(2,2),bg="white")
histFit(cols,5,c(0,1),c(0,40),1.5,"Density",c("red3","green","yellow"))
histFit(cols,6,c(0,1),c(0,30),0.5,"Moran",c("red3","green","yellow"))
histFit(cols,7,c(1,3),c(0,35),1.5,"Speed",c("red3","green","yellow"))
histFit(cols,8,c(0,1),c(0,30),1.5,"Accessibility",c("red3","green","yellow"))
}
robManyConfs(c(1,3,7))
robManyConfs <- function(cols){
par(mfcol=c(2,2),bg="white")
histFit(cols,5,c(0,1),c(0,45),1.5,"Density",c("red3","green","yellow"))
histFit(cols,6,c(0,1),c(0,30),0.5,"Moran",c("red3","green","yellow"))
histFit(cols,7,c(1,3),c(0,35),1.5,"Speed",c("red3","green","yellow"))
histFit(cols,8,c(0,1),c(0,30),1.5,"Accessibility",c("red3","green","yellow"))
}
robManyConfs(c(1,3,7))
robManyConfs <- function(cols){
par(mfcol=c(2,2),bg="white")
histFit(cols,5,c(0,1),c(0,50),1.5,"Density",c("red3","green","yellow"))
histFit(cols,6,c(0,1),c(0,30),0.5,"Moran",c("red3","green","yellow"))
histFit(cols,7,c(1,3),c(0,45),1.5,"Speed",c("red3","green","yellow"))
histFit(cols,8,c(0,1),c(0,30),1.5,"Accessibility",c("red3","green","yellow"))
}
robManyConfs(c(1,3,7))
robManyConfs <- function(cols){
par(mfcol=c(2,2),bg="white")
histFit(cols,5,c(0,1),c(0,50),1.5,"Density",c("red3","green","yellow"))
histFit(cols,6,c(0,1),c(0,30),0.5,"Moran",c("red3","green","yellow"))
histFit(cols,7,c(1,3),c(0,45),1.5,"Speed",c("red3","green","yellow"))
histFit(cols,8,c(0,1),c(0,30),1.5,"Accessibility",c("red3","green","yellow"))
}
robManyConfs(c(7,3,1))
robManyConfs <- function(cols){
par(mfcol=c(2,2),bg="white")
histFit(cols,5,c(0,1),c(0,50),1.5,"Density",c("red3","green","yellow"))
histFit(cols,6,c(-0.05,1),c(0,30),0.5,"Moran",c("red3","green","yellow"))
histFit(cols,7,c(1,3),c(0,45),1.5,"Speed",c("red3","green","yellow"))
histFit(cols,8,c(0,1),c(0,30),1.5,"Accessibility",c("red3","green","yellow"))
}
robManyConfs(c(7,3,1))
View(dat)
dat[1501,]
dat[3501,]
grid <- read.csv("/Users/Juste/Documents/Cours/ComplexSystemsMadeSimple/UrbanMorphogenesis/Results/GridExploration/gridGood.csv",sep=";")
#don't forget to take the mean on all realisations !
getReporterValue <- function(paramNames,paramValues,repName,dat){
cum = 0 ; reals = 0
for(i in 1:length(dat[[paramNames[1]]])){
j = 1
eq = TRUE
for(param in paramNames){
eq = eq&&(dat[[param]][i]==paramValues[j])
j = j + 1
}
if(eq){cum=cum+dat[[repName]][i];reals=reals+1}
}
if(reals==0){return(0)}
else{return(cum/reals)}
}
plot3d <- function(reporterName,xParamName,yParamName, otherParams,otherParamsValues,theta,phi,title,xlab,ylab){
x <- sort(unique(grid[[xParamName]]))
y <- sort(unique(grid[[yParamName]]))
z = matrix(nrow=length(x),ncol=length(y))
xcors = matrix(nrow=length(x),ncol=length(y))
ycors = matrix(nrow=length(x),ncol=length(y))
for(i in 1:length(x)){
for(j in 1:length(y)){
z[i,j] = getReporterValue(c(xParamName,yParamName, otherParams),c(x[i],y[j], otherParamsValues),reporterName,grid)
xcors[i,j]=x[i];ycors[i,j]=y[j]
}
}
#wireframe(z~xcors*ycors,data=data.frame(z,xcors,ycors),aspect = c(1,1),col="blue",shade=TRUE,light.source = c(10,0,10))
#wireframe(x = z,row.values = x, column.values = y ,angle=50,scales = list(arrows = FALSE,distance=c(2,2,2)),screen = list(z = 30, x = -60),drape = TRUE,xlab=xParamName,ylab=yParamName,zlab=reporterName)
#persp function is more ergonomic
persp(x=x,y=y,z=z,r=10,theta=theta,phi=phi,col="lightblue",xlab=expression(alpha),ylab=ylab,zlab="",shade = 0.75, ticktype = "detailed",cex.lab=0.8,cex.axis=0.6,main=title)
}
#let plot different reporters
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0.4,0.4),45,25,"Density",xlab=expression(alpha[4]),ylab=expression(alpha[2]))
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),140,25,"Moran Index",xlab="alpha_1",ylab="alpha_2")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),145,25,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),45,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0.4,0.4),45,115,"Density",xlab=expression(alpha[4]),ylab=expression(alpha[2]))
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),140,25,"Moran Index",xlab="alpha_1",ylab="alpha_2")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),145,25,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),45,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0.4,0.4),135,25,"Density",xlab=expression(alpha[4]),ylab=expression(alpha[2]))
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),140,25,"Moran Index",xlab="alpha_1",ylab="alpha_2")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),145,25,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),45,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0.4,0.4),315,25,"Density",xlab=expression(alpha[4]),ylab=expression(alpha[2]))
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),140,25,"Moran Index",xlab="alpha_1",ylab="alpha_2")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),145,25,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),45,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0.4,0.4),315,25,"Density",xlab=expression(alpha[4]),ylab=expression(alpha[2]))
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),140,25,"Moran Index",xlab="alpha_1",ylab="alpha_2")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),350,25,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),45,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0.4,0.4),315,25,"Density",xlab=expression(alpha[4]),ylab=expression(alpha[2]))
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),140,25,"Moran Index",xlab="alpha_1",ylab="alpha_2")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),320,25,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),45,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0.4,0.4),315,25,"Density",xlab=expression(alpha[4]),ylab=expression(alpha[2]))
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),140,25,"Moran Index",xlab="alpha_1",ylab="alpha_2")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),320,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0.4,0.4),225,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
View(dat)
View(grid)
sum(which(grid[,6]<0))
6*6*6*6
update <- read.csv("/Users/Juste/Documents/Cours/ComplexSystemsMadeSimple/UrbanMorphogenesis/Results/UpdateType/100houses.csv",sep=";")
View(update)
7770/2
6*6*6*6*6
1295*5
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0,0),315,25,"Density",xlab=expression(alpha[4]),ylab=expression(alpha[2]))
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0,0),140,25,"Moran Index",xlab="alpha_1",ylab="alpha_2")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),320,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),225,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
?remove
plot3d <- function(reporterName,xParamName,yParamName, otherParams,otherParamsValues,theta,phi,title,xlab,ylab){
x <- sort(unique(grid[[xParamName]]))
y <- sort(unique(grid[[yParamName]]))
z = matrix(nrow=length(x),ncol=length(y))
xcors = matrix(nrow=length(x),ncol=length(y))
ycors = matrix(nrow=length(x),ncol=length(y))
for(i in 1:length(x)){
for(j in 1:length(y)){
if(i!=1&&j!=1){
z[i,j] = getReporterValue(c(xParamName,yParamName, otherParams),c(x[i],y[j], otherParamsValues),reporterName,grid)
xcors[i,j]=x[i];ycors[i,j]=y[j]
}
}
}
#wireframe(z~xcors*ycors,data=data.frame(z,xcors,ycors),aspect = c(1,1),col="blue",shade=TRUE,light.source = c(10,0,10))
#wireframe(x = z,row.values = x, column.values = y ,angle=50,scales = list(arrows = FALSE,distance=c(2,2,2)),screen = list(z = 30, x = -60),drape = TRUE,xlab=xParamName,ylab=yParamName,zlab=reporterName)
#persp function is more ergonomic
persp(x=x,y=y,z=z,r=10,theta=theta,phi=phi,col="lightblue",xlab=expression(alpha),ylab=ylab,zlab="",shade = 0.75, ticktype = "detailed",cex.lab=0.8,cex.axis=0.6,main=title)
}
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0,0),315,25,"Density",xlab=expression(alpha[4]),ylab=expression(alpha[2]))
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0,0),140,25,"Moran Index",xlab="alpha_1",ylab="alpha_2")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),320,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),225,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0,0),225,25,"Density",xlab=expression(alpha[4]),ylab=expression(alpha[2]))
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0,0),140,25,"Moran Index",xlab="alpha_1",ylab="alpha_2")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),320,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),225,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0,0),225,25,"Density",xlab="alpha_4",ylab="alpha_2")
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0,0),140,25,"Moran Index",xlab="alpha_3",ylab="alpha_1")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),320,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),225,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
plot3d <- function(reporterName,xParamName,yParamName, otherParams,otherParamsValues,theta,phi,title,xlab,ylab){
x <- sort(unique(grid[[xParamName]]))
y <- sort(unique(grid[[yParamName]]))
z = matrix(nrow=length(x),ncol=length(y))
xcors = matrix(nrow=length(x),ncol=length(y))
ycors = matrix(nrow=length(x),ncol=length(y))
for(i in 1:length(x)){
for(j in 1:length(y)){
if(i!=1&&j!=1){
z[i,j] = getReporterValue(c(xParamName,yParamName, otherParams),c(x[i],y[j], otherParamsValues),reporterName,grid)
xcors[i,j]=x[i];ycors[i,j]=y[j]
}
}
}
#wireframe(z~xcors*ycors,data=data.frame(z,xcors,ycors),aspect = c(1,1),col="blue",shade=TRUE,light.source = c(10,0,10))
#wireframe(x = z,row.values = x, column.values = y ,angle=50,scales = list(arrows = FALSE,distance=c(2,2,2)),screen = list(z = 30, x = -60),drape = TRUE,xlab=xParamName,ylab=yParamName,zlab=reporterName)
#persp function is more ergonomic
persp(x=x,y=y,z=z,r=10,theta=theta,phi=phi,col="lightblue",xlab=xlab,ylab=ylab,zlab="",shade = 0.75, ticktype = "detailed",cex.lab=0.8,cex.axis=0.6,main=title)
}
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0,0),225,25,"Density",xlab="alpha_4",ylab="alpha_2")
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0,0),140,25,"Moran Index",xlab="alpha_3",ylab="alpha_1")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),320,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),225,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
View(update)
sum(update[,6]<0.2&&update[,7]<0.2)
sum(update[,6]<0.2)
sum(update[,7]<0.2)
update[,6]<0.2
update[,7]<0.2
(update[,7]<0.2)&&(update[,6]<0.2)
(update[,7]<0.2)&(update[,6]<0.2)
sum(update[,6]<0.2&update[,7]<0.2)
100 * sum(update[,6]<0.2&update[,7]<0.2) / length(update[,1])
100 * sum(update[,6]>0.4&update[,7]<0.2) / length(update[,1])
?sort
plotMorphDiff <- function(paramNames){
x = c();y=c();d=c();paramValues = c();nextPar=c();
for(param in paramNames){
paramValues=append(paramValues,update[[param]][1])
nextPar = append(nextPar,update[[param]][1])
}
cumd=0;cumm=0;cumg=0;reals=0;
for(i in 1:length(update[["moran.diff"]])){
j = 1
eq = TRUE
for(param in paramNames){
eq = eq&&(update[[param]][i]==paramValues[j])
nextPar[j]=update[[param]][i]
j = j + 1
}
#no pb to take the mean since same values
if(eq){cumd=cumd+as.numeric(update[["eval.density.diff"]][i]);cumm=cumm+as.numeric(update[["moran.diff"]][i]);cumg=cumg+as.numeric(update[["global.density.diff"]][i]);reals=reals+1}
#never 0 repets: at least 1!
else{x=append(x,cumd/reals);y=append(y,cumm/reals);
d=append(d,cumg/reals);
cumd=as.numeric(update[["eval.density.diff"]][i]);
cumm=as.numeric(update[["moran.diff"]][i]);
cumg=as.numeric(update[["global.density.diff"]][i]);reals=1}
paramValues=nextPar
}
#kmeans clustering for easy computation of local densities
#km <- kmeans(data.frame(x,y),100)
#density is cprresponding cluster size
#dens <- km$size[km$cluster]
#DOES NOT REALLY WORK :: cluster are quite random when number of clusters becomes big
#need to compute local densities by hand : let do it brutally in O(n^2)
#we weight by the significance of the point == global size of the difference !
#really important to do that !
dens <- densities(x,y) * d
dens <- floor(99 * dens / max(dens)) + 1
#compute corresponding color - ok since dens are integers
col <- colorRampPalette(c("darkgrey", "red"))(100)[dens]
par(mfcol=c(1,1))
par(mar=c(5,5,5,5))
plot(x[order(col)],y[order(col)],
pch=19,
cex=0.5,
col=sort(col),
xlab="Density",ylab="Moran",main="Morphologic imprint of differences")
return(data.frame(x,y))
}
testkmeans <-plotMorphDiff(c("distance.to.activities.coefficient","density.coefficient","distance.to.center.coefficient","distance.to.roads.coefficient"))
plotMorphDiff <- function(paramNames){
x = c();y=c();d=c();paramValues = c();nextPar=c();
for(param in paramNames){
paramValues=append(paramValues,update[[param]][1])
nextPar = append(nextPar,update[[param]][1])
}
cumd=0;cumm=0;cumg=0;reals=0;
for(i in 1:length(update[["moran.diff"]])){
j = 1
eq = TRUE
for(param in paramNames){
eq = eq&&(update[[param]][i]==paramValues[j])
nextPar[j]=update[[param]][i]
j = j + 1
}
#no pb to take the mean since same values
if(eq){cumd=cumd+as.numeric(update[["eval.density.diff"]][i]);cumm=cumm+as.numeric(update[["moran.diff"]][i]);cumg=cumg+as.numeric(update[["global.density.diff"]][i]);reals=reals+1}
#never 0 repets: at least 1!
else{x=append(x,cumd/reals);y=append(y,cumm/reals);
d=append(d,cumg/reals);
cumd=as.numeric(update[["eval.density.diff"]][i]);
cumm=as.numeric(update[["moran.diff"]][i]);
cumg=as.numeric(update[["global.density.diff"]][i]);reals=1}
paramValues=nextPar
}
#kmeans clustering for easy computation of local densities
#km <- kmeans(data.frame(x,y),100)
#density is cprresponding cluster size
#dens <- km$size[km$cluster]
#DOES NOT REALLY WORK :: cluster are quite random when number of clusters becomes big
#need to compute local densities by hand : let do it brutally in O(n^2)
#we weight by the significance of the point == global size of the difference !
#really important to do that !
dens <- densities(x,y) * d
dens <- floor(99 * dens / max(dens)) + 1
#compute corresponding color - ok since dens are integers
col <- colorRampPalette(c("darkgrey", "red"))(100)[dens]
par(mfcol=c(1,1))
par(mar=c(5,5,5,5))
plot(x[order(col)],y[order(col)],
pch=19,
cex=0.5,
col=sort(col),
xlab="Density",ylab="Moran",main="Morphologic imprint of differences")
return(data.frame(x,y))
}
testkmeans <-plotMorphDiff(c("distance.to.activities.coefficient","density.coefficient","distance.to.center.coefficient","distance.to.roads.coefficient"))
#function to compute local densities in graph
#works with real points : all differents !
densities <- function(x,y){
res = c()
for(i in 1:length(x)){
tot = 0 ;
for (j in 1:length(x)){
if(j != i&&sqrt((x[i]-x[j])^2+(y[i]-y[j])^2)<0.03){tot = tot + 1 }
}
res = append(res,tot)
}
return(floor(res))
}
densities <- function(x,y){
res = c()
for(i in 1:length(x)){
tot = 0 ;
for (j in 1:length(x)){
if(j != i&&sqrt((x[i]-x[j])^2+(y[i]-y[j])^2)<0.03){tot = tot + 1 }
}
res = append(res,tot)
}
return(floor(res))
}
plotMorphDiff <- function(paramNames){
x = c();y=c();d=c();paramValues = c();nextPar=c();
for(param in paramNames){
paramValues=append(paramValues,update[[param]][1])
nextPar = append(nextPar,update[[param]][1])
}
cumd=0;cumm=0;cumg=0;reals=0;
for(i in 1:length(update[["moran.diff"]])){
j = 1
eq = TRUE
for(param in paramNames){
eq = eq&&(update[[param]][i]==paramValues[j])
nextPar[j]=update[[param]][i]
j = j + 1
}
#no pb to take the mean since same values
if(eq){cumd=cumd+as.numeric(update[["eval.density.diff"]][i]);cumm=cumm+as.numeric(update[["moran.diff"]][i]);cumg=cumg+as.numeric(update[["global.density.diff"]][i]);reals=reals+1}
#never 0 repets: at least 1!
else{x=append(x,cumd/reals);y=append(y,cumm/reals);
d=append(d,cumg/reals);
cumd=as.numeric(update[["eval.density.diff"]][i]);
cumm=as.numeric(update[["moran.diff"]][i]);
cumg=as.numeric(update[["global.density.diff"]][i]);reals=1}
paramValues=nextPar
}
#kmeans clustering for easy computation of local densities
#km <- kmeans(data.frame(x,y),100)
#density is cprresponding cluster size
#dens <- km$size[km$cluster]
#DOES NOT REALLY WORK :: cluster are quite random when number of clusters becomes big
#need to compute local densities by hand : let do it brutally in O(n^2)
#we weight by the significance of the point == global size of the difference !
#really important to do that !
dens <- densities(x,y) * d
dens <- floor(99 * dens / max(dens)) + 1
#compute corresponding color - ok since dens are integers
col <- colorRampPalette(c("darkgrey", "red"))(100)[dens]
par(mfcol=c(1,1))
par(mar=c(5,5,5,5))
plot(x[order(col)],y[order(col)],
pch=19,
cex=0.5,
col=sort(col),
xlab="Density",ylab="Moran",main="Morphologic imprint of differences")
return(data.frame(x,y))
}
testkmeans <-plotMorphDiff(c("distance.to.activities.coefficient","density.coefficient","distance.to.center.coefficient","distance.to.roads.coefficient"))
#let plot different reporters
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0,0),225,25,"Density",xlab="alpha_4",ylab="alpha_2")
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0,0),140,25,"Moran Index",xlab="alpha_3",ylab="alpha_1")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),320,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),225,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0,0),225,25,"Density",xlab="alpha_4",ylab="alpha_2")
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0,0),50,25,"Moran Index",xlab="alpha_3",ylab="alpha_1")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),320,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),45,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
plot3d <- function(reporterName,xParamName,yParamName, otherParams,otherParamsValues,theta,phi,title,xlab,ylab){
x <- sort(unique(grid[[xParamName]]))
y <- sort(unique(grid[[yParamName]]))
z = matrix(nrow=length(x),ncol=length(y))
xcors = matrix(nrow=length(x),ncol=length(y))
ycors = matrix(nrow=length(x),ncol=length(y))
for(i in 1:length(x)){
for(j in 1:length(y)){
#if(i!=1&&j!=1){
z[i,j] = getReporterValue(c(xParamName,yParamName, otherParams),c(x[i],y[j], otherParamsValues),reporterName,grid)
xcors[i,j]=x[i];ycors[i,j]=y[j]
#}
}
}
#wireframe(z~xcors*ycors,data=data.frame(z,xcors,ycors),aspect = c(1,1),col="blue",shade=TRUE,light.source = c(10,0,10))
#wireframe(x = z,row.values = x, column.values = y ,angle=50,scales = list(arrows = FALSE,distance=c(2,2,2)),screen = list(z = 30, x = -60),drape = TRUE,xlab=xParamName,ylab=yParamName,zlab=reporterName)
#persp function is more ergonomic
persp(x=x,y=y,z=z,r=10,theta=theta,phi=phi,col="lightblue",xlab=xlab,ylab=ylab,zlab="",shade = 0.75, ticktype = "detailed",cex.lab=0.8,cex.axis=0.6,main=title)
}
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0,0),225,25,"Density",xlab="alpha_4",ylab="alpha_2")
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0,0),50,25,"Moran Index",xlab="alpha_3",ylab="alpha_1")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),320,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),45,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
plot3d <- function(reporterName,xParamName,yParamName, otherParams,otherParamsValues,theta,phi,title,xlab,ylab){
x <- sort(unique(grid[[xParamName]]))
y <- sort(unique(grid[[yParamName]]))
z = matrix(nrow=length(x),ncol=length(y))
xcors = matrix(nrow=length(x),ncol=length(y))
ycors = matrix(nrow=length(x),ncol=length(y))
for(i in 1:length(x)){
for(j in 1:length(y)){
#if(i!=1&&j!=1){
z[i,j] = getReporterValue(c(xParamName,yParamName, otherParams),c(x[i],y[j], otherParamsValues),reporterName,grid)
xcors[i,j]=x[i];ycors[i,j]=y[j]
#}
}
}
z[1,1]=min(z)
#wireframe(z~xcors*ycors,data=data.frame(z,xcors,ycors),aspect = c(1,1),col="blue",shade=TRUE,light.source = c(10,0,10))
#wireframe(x = z,row.values = x, column.values = y ,angle=50,scales = list(arrows = FALSE,distance=c(2,2,2)),screen = list(z = 30, x = -60),drape = TRUE,xlab=xParamName,ylab=yParamName,zlab=reporterName)
#persp function is more ergonomic
persp(x=x,y=y,z=z,r=10,theta=theta,phi=phi,col="lightblue",xlab=xlab,ylab=ylab,zlab="",shade = 0.75, ticktype = "detailed",cex.lab=0.8,cex.axis=0.6,main=title)
}
#let plot different reporters
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0,0),225,25,"Density",xlab="alpha_4",ylab="alpha_2")
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0,0),50,25,"Moran Index",xlab="alpha_3",ylab="alpha_1")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),320,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),45,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
plot3d <- function(reporterName,xParamName,yParamName, otherParams,otherParamsValues,theta,phi,title,xlab,ylab){
x <- sort(unique(grid[[xParamName]]))
y <- sort(unique(grid[[yParamName]]))
z = matrix(nrow=length(x),ncol=length(y))
xcors = matrix(nrow=length(x),ncol=length(y))
ycors = matrix(nrow=length(x),ncol=length(y))
for(i in 1:length(x)){
for(j in 1:length(y)){
#if(i!=1&&j!=1){
z[i,j] = getReporterValue(c(xParamName,yParamName, otherParams),c(x[i],y[j], otherParamsValues),reporterName,grid)
xcors[i,j]=x[i];ycors[i,j]=y[j]
#}
}
}
z[1,1]=min(z[z>min(z)])
#wireframe(z~xcors*ycors,data=data.frame(z,xcors,ycors),aspect = c(1,1),col="blue",shade=TRUE,light.source = c(10,0,10))
#wireframe(x = z,row.values = x, column.values = y ,angle=50,scales = list(arrows = FALSE,distance=c(2,2,2)),screen = list(z = 30, x = -60),drape = TRUE,xlab=xParamName,ylab=yParamName,zlab=reporterName)
#persp function is more ergonomic
persp(x=x,y=y,z=z,r=10,theta=theta,phi=phi,col="lightblue",xlab=xlab,ylab=ylab,zlab="",shade = 0.75, ticktype = "detailed",cex.lab=0.8,cex.axis=0.6,main=title)
}
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0,0),225,25,"Density",xlab="alpha_4",ylab="alpha_2")
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0,0),50,25,"Moran Index",xlab="alpha_3",ylab="alpha_1")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),320,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),45,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
let plot different reporters
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0,0),225,25,"Density",xlab="alpha_4",ylab="alpha_2")
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0,0),50,25,"Moran Index",xlab="alpha_3",ylab="alpha_1")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),50,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),315,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
#let plot different reporters
par(mfcol=c(2,2))
par(mar=c(1,2,1,2))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0,0),225,25,"Density",xlab="alpha_4",ylab="alpha_2")
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0,0),50,25,"Moran Index",xlab="alpha_3",ylab="alpha_1")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),50,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),315,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
par(mfcol=c(2,2))
par(mar=c(1,2.5,1,2.5))
plot3d("eval.density","distance.to.activities.coefficient","distance.to.roads.coefficient",c("distance.to.center.coefficient","density.coefficient"),c(0,0),225,25,"Density",xlab="alpha_4",ylab="alpha_2")
plot3d("spatial.autocorrelation.index","distance.to.center.coefficient","density.coefficient",c("distance.to.activities.coefficient","distance.to.roads.coefficient"),c(0,0),50,25,"Moran Index",xlab="alpha_3",ylab="alpha_1")
plot3d("eval.speed","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),50,35,"Speed",xlab="alpha_4",ylab="alpha_1")
plot3d("eval.activities","distance.to.activities.coefficient","density.coefficient",c("distance.to.center.coefficient","distance.to.roads.coefficient"),c(0,0),315,35,"Accessibility",xlab="alpha_4",ylab="alpha_1")
eco <- read.csv("/Users/Juste/Documents/Cours/ComplexSystemsMadeSimple/project/Results/Economic/200repets10eco.csv",sep=";")
eco <- read.csv("/Users/Juste/Documents/Cours/ComplexSystemsMadeSimple/UrbanMorphogenesis/Results/Economic/200repets10eco.csv",sep=";")
View(eco)
dat <- read.csv("Results/grid/repets.csv",sep=";")
setwd('/Users/Juste/Documents/ComplexSystems/CityBikes')
dat <- read.csv("Results/grid/repets.csv",sep=";")
View(dat)
(4*1.96)^2
